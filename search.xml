<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[godot_00]]></title>
      <url>/2017/12/23/godot-00/</url>
      <content type="html"><![CDATA[<p>About Godot</p>
<p><a href="https://travis-ci.org/godotengine/godot" target="_blank" rel="noopener"><img src="https://travis-ci.org/godotengine/godot.svg?branch=master" alt="Travis Build Status"></a><br><a href="https://ci.appveyor.com/project/akien-mga/godot" target="_blank" rel="noopener"><img src="https://ci.appveyor.com/api/projects/status/bfiihqq6byxsjxxh/branch/master?svg=true" alt="AppVeyor Build Status"></a><br><a href="https://www.codetriage.com/godotengine/godot" target="_blank" rel="noopener"><img src="https://www.codetriage.com/godotengine/godot/badges/users.svg" alt="Code Triagers Badge"></a></p>
]]></content>
      
        <categories>
            
            <category> Godot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> -- Godot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[-KBEngine- KBEngine 简介]]></title>
      <url>/2017/12/23/kbengine-00/</url>
      <content type="html"><![CDATA[<p>KBEngine <a href="http://kbengine.org" target="_blank" rel="noopener">官网</a> <a href="http://bbs.kbengine.org" target="_blank" rel="noopener">论坛</a><br>一款开源的游戏服务端引擎，客户端通过简单的约定协议就能与服务端通讯，使用KBEngine插件能够快速与(Unity3D、UE4、OGRE、HTML5、等等)技术结合形成一个完整的客户端。 服务端底层框架使用C++编写，游戏逻辑层使用Python(支持热更<br>新)，开发者无需重复的实现一些游戏服务端通用的底层技术，将精力真正集中到游戏开发层面上来，快速的打造各种网络游戏。</p>
<p><a href="http://github.com/kbengine/kbengine" target="_blank" rel="noopener">github</a><br><a href="https://travis-ci.org/kbengine/kbengine" target="_blank" rel="noopener"><img src="https://travis-ci.org/kbengine/kbengine.svg" alt="Build Status"></a><br><a href="https://ci.appveyor.com/project/kbengine/kbengine/branch/master" target="_blank" rel="noopener"><img src="https://ci.appveyor.com/api/projects/status/github/kbengine/kbengine?branch=master&amp;svg=true" alt="Appveyor (Windows) Build  Status"></a></p>
]]></content>
      
        <categories>
            
            <category> KBEngine </category>
            
        </categories>
        
        
        <tags>
            
            <tag> KBEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[-Node- hexo 搭建 blog 使用 maupassant 主题]]></title>
      <url>/2017/05/16/FirstBlog/</url>
      <content type="html"><![CDATA[<p>最开始是在看到了 <a href="http://liaoyulei.cn/" target="_blank" rel="noopener">廖大的博客</a> 才发现了这个主题，然后就去了解了下 hexo 。个人感觉挺不错的，然后就准备自己也尝试一下吧，然后就有了这个博客。<br>首先 hexo 是基于 nodejs 的，所以要首先下载 nodejs ( <a href="https://nodejs.org/" target="_blank" rel="noopener">官网</a> )。 关于 nodejs 的安装这里就不多说了。装完 nodejs 之后我们还需要 npm 这个是nodejs 的一个包管理工具。一般 windows 安装好 nodejs 会也把这个安装好。关于 npm 因为包的镜像源是在国外所以导致国内的下载速度一直不是很好，这里我推荐用 taobao npm 的 cnpm。( <a href="https://npm.taobao.org/" target="_blank" rel="noopener">官网</a> ) 安装很简单 ：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>ok 准备工作做完 然后就开始安装我们的 hexo：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>关于 hexo 常用的命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init <span class="variable">$name</span>     <span class="comment"># 初始化项目</span></span><br><span class="line">$ hexo server         <span class="comment"># 启动 hexo server 可以简化 hexo s</span></span><br><span class="line">$ hexo generate       <span class="comment"># 生成静态文件    可以简化 hexo g</span></span><br><span class="line">$ hexo deploy         <span class="comment"># 配置 github 可以直接发布提交 可以简化 hexo d</span></span><br><span class="line">$ hexo new <span class="variable">$name</span>      <span class="comment"># 创建新文章</span></span><br><span class="line">$ hexo new page <span class="variable">$name</span> <span class="comment"># 创建新页面</span></span><br></pre></td></tr></table></figure>
<p>首先 我们新建一个项目 ：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ hexo <span class="built_in">cd</span> blog/</span><br></pre></td></tr></table></figure>
<p>然后安装一下依赖的包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure>
<p>安装完毕之后 到这里就算成功了 运行一下看一下效果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>  然后就可以在浏览器里打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">测试</a> 结果。到这里我们的 hexo blog 就已经成功了。<br>  然后就是安装主题了，hexo 有很多很漂亮的主题，个人还是比较喜欢 maupassant 这个主题。<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">Github 地址(hexo 版)：https://github.com/tufu9441/maupassant-hexo</a>。 关于这个主题的安装，介绍里的文章已经介绍的很详细了 <a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">这里</a>。在这里我提一下安装这个主题的时候遇到的一个坑吧：安装完之后我运行的页面显示这样：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">extends base - var current_title = page.title || tag.name || category.name || site.title</span><br><span class="line"> block title if config.subtitle title= config.title + &apos; | &apos; + config.subtitle else title</span><br><span class="line"> = config.title block content for post in page.posts.toArray() .post h1.post-title </span><br><span class="line"> include _partial/helpers a(href=url_for(post.path)) +title(post) .post-meta= post.</span><br><span class="line"> date.format(config.date_format) if theme.duoshuo a.ds-thread-count(data-thread-key=</span><br><span class="line"> post.path, href=url_for(post.path) + &apos;#comments&apos;) if theme.disqusa.disqus-comment-count</span><br><span class="line"> (data-disqus-identifier=post.path, href=url_for(post.path) + &apos;#disqus_thread&apos;) if </span><br><span class="line"> theme.gentie a.ds-thread-count(class=&apos;cloud-tie-join-count&apos;, href=url_for(post.path) + </span><br><span class="line"> &apos;#comments&apos;) span.join-count(lang=&apos;join-count&apos; style=&apos;margin: 0 3px 0 1px;&apos; data-url=&apos;#</span><br><span class="line"> &#123;config.url&#125;#&#123;url_for(post.path)&#125;&apos;) 0 span= &apos; &apos; + __(&apos;Discuss&apos;) if post.description </span><br><span class="line"> .post-content != post.description else if post.excerpt .post-content != post.excerpt else</span><br><span class="line">  if post.content - var br = 0 - for (var i = 0; i &lt; 5; ++i) &#123; - br = post.content.indexOf</span><br><span class="line">  (&apos;\n&apos;,br+1) if br&lt;0 - break if br &gt;150 - break - &#125; if br &lt; 0 .post-content != </span><br><span class="line">  post.content else .post-content != post.content.substring(0, br) p(class=&apos;readmore&apos;) a</span><br><span class="line">  (href=url_for(post.path))= __(&apos;Readmore&apos;) include _partial/paginator if theme.disqus </span><br><span class="line">  script(id=&apos;dsq-count-scr&apos;, src=&apos;//#&#123;theme.disqus&#125;.disqus.com/count.js&apos;, async) if </span><br><span class="line">  theme.gentie script. var yunModuleEnv = true; script</span><br><span class="line">  (src=&apos;//img1.cache.netease.com/f2e/tie/yun/sdk/loader.js&apos;) script. var yunTieProductKey</span><br><span class="line">   = &apos;#&#123;theme.gentie&#125;&apos;; Tie.loader</span><br><span class="line">   (&apos;aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vZXh0ZW5kL2xpc3Rfam9pbl9zY3JpcHQuaHRtbA==&apos;, true);</span><br></pre></td></tr></table></figure></p>
<p>  一看就是渲染出的问题，然后在<a href="https://github.com/tufu9441/maupassant-hexo/issues/272" target="_blank" rel="noopener">这里</a>看到了问题的原因。根据作者解释： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这几天hexo-renderer-jade更新了一个版本：https://www.npmjs.com/package/hexo-renderer-jade </span><br><span class="line">好像是不再能渲染.jade格式的文件了，因此你们可以安装之前的版本试一试：</span><br><span class="line">npm install hexo-renderer-jade@0.3.0 --save</span><br></pre></td></tr></table></figure>
<p>然后我尝试了下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-jade@0.3.0 --save</span><br></pre></td></tr></table></figure></p>
<p>然后再次启动 发现没有问题 已经解决了 搞定                               </p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> maupassant </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
